<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kenny Fraser</title>
    <description>Kenny Fraser is a freelance Web Designer and Front End Web Developer living near Inverness in the Scottish Highlands.</description>
    <link>http://kennyfraser.com/</link>
    <atom:link href="http://kennyfraser.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 03 Mar 2016 17:41:03 +0000</pubDate>
    <lastBuildDate>Thu, 03 Mar 2016 17:41:03 +0000</lastBuildDate>
    <generator>Jekyll v3.1.1</generator>
    
      <item>
        <title>Can&#39;t directly rename folders in the Amazon S3 Console</title>
        <description>&lt;p&gt;Strange as it may seem, you can’t directly rename folders in the Amazon S3 online console:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/S3-cannot-rename-directory.png&quot; alt=&quot;cannot rename folder in Amazon S3 console&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Files, yes, but for directories you generally need to duplicate them then delete the original.  As I had a batch to do, this was a bit of a pain.&lt;/p&gt;

&lt;p&gt;There do seem to be wee Windows S3 clients that will offer this functionality though.  One which came to the rescue was the free &lt;a href=&quot;http://s3browser.com/&quot;&gt;S3 Browser&lt;/a&gt; which did the job nicely, though just one directory at a time.  Install, plug in your access credentials and away ye go.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/S3-browser.jpg&quot; alt=&quot;S3 browser&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Mar 2016 17:30:00 +0000</pubDate>
        <link>http://kennyfraser.com/amazon/cannot-rename-folders-in-the-Amazon-S3-console</link>
        <guid isPermaLink="true">http://kennyfraser.com/amazon/cannot-rename-folders-in-the-Amazon-S3-console</guid>
        
        
      </item>
    
      <item>
        <title>301 redirects in .htaccess for filenames with spaces</title>
        <description>&lt;p&gt;I was working on a site where pages had originally been named using an old WYSIWYG editor, with spaces in the filenames.  These were being served up OK in the browser, which URL-encoded the space (as an &lt;a href=&quot;http://www.w3schools.com/tags/ref_urlencode.asp&quot;&gt;unsafe ASCII character&lt;/a&gt;) to &lt;em&gt;%20&lt;/em&gt; :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;http://example.com/old%20filename%20with%20spaces.htm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However when using this URL-encoded format in the &lt;em&gt;.htaccess&lt;/em&gt; file, the server generated an error for the &lt;em&gt;301 Redirect&lt;/em&gt; lines:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;Redirect 301 /old%20filename%20with%20spaces.htm /nice-clean-new-url/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The correct way to redirect filenames with spaces in &lt;em&gt;.htaccess&lt;/em&gt; is by leaving the spaces, and quoting the filename:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;Redirect 301 &lt;span class=&quot;s2&quot;&gt;&quot;/old filename with spaces.htm&quot;&lt;/span&gt; /nice-clean-new-url/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
        <pubDate>Mon, 29 Feb 2016 10:00:00 +0000</pubDate>
        <link>http://kennyfraser.com/htaccess/301-redirect-filenames-with-spaces</link>
        <guid isPermaLink="true">http://kennyfraser.com/htaccess/301-redirect-filenames-with-spaces</guid>
        
        
      </item>
    
      <item>
        <title>Setting up a custom domain on GitHub Pages</title>
        <description>&lt;p&gt;What I wanted was &lt;em&gt;http://kennyfraser.com&lt;/em&gt; to be the definitive URL of this site, and &lt;a href=&quot;http://www.kennyfraser.com/&quot;&gt;http://www.kennyfraser.com&lt;/a&gt; to redirect there.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/using-a-custom-domain-with-github-pages/&quot;&gt;Using the instructions here&lt;/a&gt; I had to &lt;a href=&quot;https://help.github.com/articles/setting-up-your-pages-site-repository/&quot;&gt;add a CNAME &lt;em&gt;file&lt;/em&gt; to my GitHub User repository&lt;/a&gt; as well as &lt;a href=&quot;https://help.github.com/articles/setting-up-a-custom-subdomain/&quot;&gt;configure a CNAME &lt;em&gt;record&lt;/em&gt;&lt;/a&gt; at the DNS service provider (Fasthosts).&lt;/p&gt;

&lt;p&gt;The GitHub CNAME file contents are just:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;kennyfraser.com&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is what eventually worked in the DNS provider’s records:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/CNAME-records-fasthosts-github-pages.png&quot; alt=&quot;CNAME records at Fasthosts&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Both blank and &lt;em&gt;www&lt;/em&gt; Host Names point to my &lt;em&gt;username.github.io&lt;/em&gt; and neither appear in the A records. As far as I’m aware, these are both &lt;a href=&quot;https://help.github.com/articles/about-custom-domains-for-github-pages-sites/&quot;&gt;&lt;em&gt;custom subdomains&lt;/em&gt; (for best performance) and not &lt;em&gt;apex domains&lt;/em&gt;&lt;/a&gt; as they’re configured through CNAME and not A records.&lt;/p&gt;

&lt;p&gt;GitHub Pages &lt;a href=&quot;https://help.github.com/articles/setting-up-an-apex-domain-and-www-subdomain/&quot;&gt;automatically creates a redirect&lt;/a&gt; between these &lt;em&gt;www&lt;/em&gt; and &lt;em&gt;non-www&lt;/em&gt; versions of the domain, depending on the contents of the CNAME &lt;em&gt;file&lt;/em&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 13 Feb 2016 21:00:00 +0000</pubDate>
        <link>http://kennyfraser.com/github/setting-up-a-custom-domain-on-github-pages</link>
        <guid isPermaLink="true">http://kennyfraser.com/github/setting-up-a-custom-domain-on-github-pages</guid>
        
        
      </item>
    
      <item>
        <title>This site is born from Jekyll and GitHub</title>
        <description>&lt;p&gt;I was considering moving my simple portfolio site at &lt;a href=&quot;http://kennyfraser.com&quot;&gt;kennyfraser.com&lt;/a&gt; to a more streamlined publishing setup.  I wanted to get away from hand-coded HTML/CSS files and FTP, and add simple blog functionality.&lt;/p&gt;

&lt;p&gt;After hearing good things about &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; via &lt;a href=&quot;https://css-tricks.com/&quot;&gt;CSS-Tricks&lt;/a&gt; and seeing how tightly coupled it can be with &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;, I forged ahead.  Ironically, after beginning the installation process, my existing VPS host went down due to a power outage, taking my email forwarding with it.  No emails for more than 24 hours.  So managed to get a &lt;em&gt;lot&lt;/em&gt; done…&lt;/p&gt;

&lt;p&gt;Jekyll seems to be the &lt;a href=&quot;https://www.staticgen.com/&quot;&gt;most popular static site generator&lt;/a&gt; out there at the moment.  Experience of building sites with the content management system &lt;a href=&quot;http://statamic.com/&quot;&gt;Statamic&lt;/a&gt; has been very good so far.  Statamic needs PHP on the server but the flat file construction looks on the surface pretty similar to Jekyll (which doesn’t require any server scripting).&lt;/p&gt;

&lt;p&gt;Installation of Jekyll involved delving into the command line on OS X - I mainly used documentation at &lt;a href=&quot;http://jekyllrb.com/docs/installation/&quot;&gt;Jekyll&lt;/a&gt; and &lt;a href=&quot;https://gorails.com/setup/osx/10.11-el-capitan&quot;&gt;Go Rails&lt;/a&gt; (with Homebrew). &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; is also needed.&lt;/p&gt;

&lt;p&gt;The advantages pretty quicky made themselves clear:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; for writing blog posts and page content - as it should be&lt;/li&gt;
  &lt;li&gt;easily generates a local server at &lt;em&gt;http://localhost:4000/&lt;/em&gt; to preview the entire site, via the command line &lt;em&gt;jekyll serve&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;support for &lt;a href=&quot;http://sass-lang.com/&quot;&gt;Sass&lt;/a&gt; generation of stylesheets&lt;/li&gt;
  &lt;li&gt;code syntax highlighting&lt;/li&gt;
  &lt;li&gt;fast performance and no database overhead&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My GitHub command line skills aren’t yet fully formed, so I’m using &lt;a href=&quot;https://desktop.github.com/&quot;&gt;GitHub Desktop&lt;/a&gt; to commit changes to local files then sync them with GitHub Pages.  Highlights here are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;everything&lt;/em&gt; is easily version controllable&lt;/li&gt;
  &lt;li&gt;quick and easy publishing with &lt;em&gt;Sync&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;speedy and reliable hosting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Will I run into limitations later? Probably. But right now things are &lt;em&gt;quick and easy&lt;/em&gt; - I like it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/&quot;&gt;&lt;img src=&quot;/img/jekyll-logo.png&quot; alt=&quot;Jekyll static site generator&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Eduardo Bouças has written a good &lt;a href=&quot;https://davidwalsh.name/introduction-static-site-generators&quot;&gt;comparison of static vs dynamic site generators&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 12 Feb 2016 22:30:00 +0000</pubDate>
        <link>http://kennyfraser.com/jekyll/new-portfolio-blog-site-on-github-pages</link>
        <guid isPermaLink="true">http://kennyfraser.com/jekyll/new-portfolio-blog-site-on-github-pages</guid>
        
        
      </item>
    
  </channel>
</rss>
